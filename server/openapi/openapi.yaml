openapi: 3.1.0
info:
  title: TLS Learning API
  description: >
    学習用の TLS クライアントAPIです。
    Cipher Suites, Extensions, KeyShares などを自由に指定して TLS 1.3 ハンドシェイクを実行できます。
  version: 1.0.0
servers:
  - url: http://localhost:8080

#============================================================
# Paths: APIエンドポイントの定義
#============================================================
paths:
  /tls/handshake:
    post:
      summary: TLS 1.3 ハンドシェイクを実行
      description: 指定した TLS 設定でサーバとハンドシェイクを行い、その結果を返します。ハンドシェイクのみでアプリケーションデータは送信しません。
      tags:
        - TLS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandshakeRequest'
      responses:
        '200':
          description: TLS ハンドシェイク成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandshakeResponse'
        '400':
          description: リクエストパラメータが不正
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバ内部エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tls/application:
    post:
      summary: TLS 1.3 アプリケーションデータを送信
      description: 指定した TLS 設定でサーバとハンドシェイクを行い、成功後にアプリケーションデータを送信してレスポンスを返します。
      tags:
        - TLS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
      responses:
        '200':
          description: TLS アプリケーションデータ送信成功時のレスポンス
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '400':
          description: リクエストパラメータが不正
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: サーバ内部エラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

#============================================================
# Components: 再利用可能なスキーマの定義
#============================================================
components:
  schemas:
    #------------------------------------------------------------
    # リクエスト関連のスキーマ
    #------------------------------------------------------------
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: エラーメッセージ

    HandshakeRequest:
      allOf:
        - $ref: '#/components/schemas/ConnectionTarget'
        - $ref: '#/components/schemas/TlsClientParameters'
      type: object

    ApplicationRequest:
      allOf:
        - $ref: '#/components/schemas/ConnectionTarget'
        - $ref: '#/components/schemas/TlsClientParameters'
      type: object
      required:
        - application_data
      properties:
        application_data:
          type: string
          format: byte
          description: 暗号化して送信するHTTPメッセージなどのアプリケーションデータ（Base64エンコード）
          example: "R0VUIC8gSFRUUC8xLjENCkhvc3Q6IHd3dy5leGFtcGxlLmNvbQ0KDQo="

    ConnectionTarget:
      type: object
      required:
        - server
      properties:
        server:
          type: string
          description: 接続先ホスト名またはIPアドレス
          example: www.example.com
        port:
          type: integer
          description: 接続先ポート
          default: 443

    TlsClientParameters:
      type: object
      # TlsClientParameters内で必須のプロパティをリストで指定
      required:
        - server_name
        - client_random
        - cipher_suites
        - supported_groups
        - key_shares
        - signature_algorithms
        - tls_versions
        - private_key
      properties:
        server_name:
          type: string
          description: Server Name Indication (SNI)拡張に設定するホスト名。指定しない場合は'server'の値が使用されます。
          example: www.example.com
        client_random:
          type: string
          description: クライアントの Random 値 (hex)
          example: "deadbeefdeadbeef..."
        cipher_suites:
          type: array
          description: 使用する Cipher Suite のリスト (16進数文字列)
          items:
            type: string
          example:
            - "0x1301"  # TLS_AES_128_GCM_SHA256
            - "0x1302"  # TLS_AES_256_GCM_SHA384
            - "0x1303"  # TLS_CHACHA20_POLY1305_SHA256
        supported_groups:
          type: array
          description: サポートする楕円曲線 (KeyShare Group)
          items:
            type: string
          example:
            - "0x001d"  # X25519
            - "0x0017"  # secp256r1
            - "0x0018"  # secp384r1
            - "0x0019"  # secp521r1
        key_shares:
          type: array
          description: KeyShare に使う鍵情報
          items:
            $ref: '#/components/schemas/KeyShare'
        signature_algorithms:
          type: array
          description: サポートする署名アルゴリズム
          items:
            type: string
          example:
            - "0x0403"  # ecdsa_secp256r1_sha256
            - "0x0503"  # rsa_pss_rsae_sha256
            - "0x0804"  # rsa_pss_pss_sha256
        tls_versions:
          type: array
          description: 使用する TLS バージョン
          items:
            type: string
          default: ["TLS1.3"]
        private_key:
          type: string
          description: KeyShare に使う秘密鍵 (hex)
          example: "deadbeefdeadbeef..."

    KeyShare:
      type: object
      # KeyShare内で必須のプロパティをリストで指定
      required:
        - group
      properties:
        group:
          type: string
          description: 曲線名
          example: "0x001d"  # X25519
        data:
          type: string
          description: 公開鍵データ（hex 文字列）
          example: "deadbeefdeadbeef..."

    #------------------------------------------------------------
    # レスポンス関連のスキーマ
    #------------------------------------------------------------
    HandshakeResponse:
      type: object
      description: TLSハンドシェイク成功時のレスポンス
      required:
        - handshake_success
        - raw_client_hello
        - raw_server_response
        - raw_server_response_decoded
        - shared_secret
      properties:
        handshake_success:
          type: boolean
          description: ハンドシェイクの成否を示します。成功時は常に true となります。
          example: true
        raw_client_hello:
          type: string
          description: ClientHelloのバイト列 (hexエンコード)
        raw_server_response:
          type: string
          description: ServerHelloを含めたサーバー側の応答のバイト列 (hexエンコード)
        raw_server_response_decoded:
          type: string
          description: ServerHelloを含めたサーバー側の応答のバイト列を復号化したもの
        shared_secret:
          type: string
          description: ハンドシェイクで導出された共通鍵 (hexエンコード)

    ApplicationResponse:
      type: object
      properties:
        handshake_success:
          type: boolean
          description: ハンドシェイクの成否を示します。成功時は常に true となります。
          example: true
        raw_client_hello:
          type: string
          description: ClientHelloのバイト列 (hexエンコード)
        raw_server_response:
          type: string
          description: ServerHelloを含めたサーバー側の応答のバイト列 (hexエンコード)
        raw_server_response_decoded:
          type: string
          description: ServerHelloを含めたサーバー側の応答のバイト列を復号化したもの
        shared_secret:
          type: string
          description: ハンドシェイクで導出された共通鍵 (hexエンコード)
        